syntax = "proto3";

package personalsharings;

import "google/api/annotations.proto";

message Empty {}

enum Status {
    UNDEFINED = 0;
    PENDING = 1;
    OK = 2;
    FAILED = 3;
}

message PersonalSharing {
    string id = 1;
    string from = 2;
    string to = 3;
    string filename = 4;
    string file_id = 5;
    bool is_dir = 6;
    int64 expire = 7;
    int64 create_at = 8;
    Status status = 9;
}

message PersonalSharings {
    repeated PersonalSharing personalsharing = 1;
}

message CreatePersonalSharingRequest {
    string to = 1;
    string filename = 2;
    string file_id = 3;
    bool is_dir = 4;
    int64 expire = 5;
}

message UpdatePersonalSharingRequest {
    string id = 1;
    string filename = 2;
    int64 expire = 3;
    Status status = 4;
}

message ListPersonalSharingsRequest {
        string from = 1;
        string to = 2;
        int64 since = 4;
        bool expired = 5;
}

message GetPersonalSharingRequest {
    string id = 1;
}

message DeletePersonalSharingRequest {
    string id = 1;
}

service PersonalSharingSrv {
    rpc CreatePersonalSharing(CreatePersonalSharingRequest) returns (PersonalSharing){
        option (google.api.http) = {
            post: "/v1/personalsharings"
            body: "*"
        };
    };
    rpc UpdatePersonalSharing(UpdatePersonalSharingRequest) returns (PersonalSharing){
        option (google.api.http) = {
            put: "/v1/personalsharings/{id}"
            body: "*"
        };
    };
    rpc ListPersonalSharings(ListPersonalSharingsRequest) returns (PersonalSharings){
        option (google.api.http) = {
            get: "/v1/personalsharings"
        };
    };
    rpc GetPersonalSharing(GetPersonalSharingRequest) returns (PersonalSharing){
        option (google.api.http) = {
            get: "/v1/personalsharings/{id}"
        };
    };
    rpc DeletePersonalSharing(DeletePersonalSharingRequest) returns (Empty){
        option (google.api.http) = {
            delete: "/v1/personalsharings/{id}"
        };
    };
}